#!/bin/sh
set -eu

me="${0##*/}"

usage() {
	echo "\
usage: $me [options] src dest
Create filesystem in RAM, mount it at dest, copy there kernel
sources found in src and create TAGS file.

  -a, --arch=arch  from arches inside arch/ copy only arch/<arch>
  -h, --help       display this help and exit
"
	exit 1
}

die() {
	echo "$me: $1" >&2
	exit 1
}

msg() {
	echo "$1" >&2
}

getsize() {
	local size
	size=0
	while IFS= read -r p; do
		[ -n "$p" -a -e "$src/$p" ] || continue
		psize=$(du -s "$src/$p" | cut -d'	' -f1)
		size=$((size + psize))
	done
	echo $size
}

arch=
size=300M
while [ $# -gt 0 ]; do
	case "$1" in
		-h|--help) usage;;
		-a|--arch) shift; arch="$1"; shift;;
		*) break;;
	esac
done
[ $# -eq 2 ] || usage
[ -d "$1" ] || die "$1 must be directory"
src="${1%/}"
[ -d "$2" ] || die "$2 must be directory"
dest=$(realpath "$2")

copylist="
.config
Makefile
Kconfig
scripts/
init/
kernel/
lib/
usr/
arch/Kconfig
arch/$arch/
drivers/of/
drivers/tty/
drivers/video/console/
drivers/usb/
mm/
net/
fs/sysfs/
fs/kernfs/
include/
Documentation/kbuild/
Documentation/arm/
Documentation/devicetree/
Documentation/admin-guide/
Documentation/filesystems/
Documentation/driver-api/
Documentation/vm/
"

msg "Calculating filesystem size"
size=$(echo "$copylist" | getsize)
size=$((size * 5 / 4)) # account extra 25% for TAGS
size=${size}K # du returns size in kilobytes

cut -d' ' -f2 /proc/mounts | grep -Fxq "$dest" && {
	msg "Mountpoint $dest is already used!"
	read -p 'Unmount? [y/N] ' r
	[ "$r" = y ] || exit 1
	sudo umount "$dest"
}

msg "Creating filesystem in RAM"
sudo mount -t tmpfs -o size="$size" "${src##*/}" "$dest"

msg "Copying kernel sources to RAM filesystem"
cd "$src"
echo "$copylist" | while IFS= read -r p; do
	[ -n "$p" -a -e "$p" ] || continue
	cp -a --parents "$p" "$dest"
done

msg "Creating TAGS"
cd "$dest"
etags-kernel
# for projectile .git marks a root of a project, which provides scope
# for e.g. xref-find-references, so create empty .git as marker
git init
